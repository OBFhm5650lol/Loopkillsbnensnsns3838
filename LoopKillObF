local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local SoundService = game:GetService("SoundService")

-- Create the GUI with modern styling (matching LoopKill)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LoopFlingGUI"
ScreenGui.Parent = game:GetService("CoreGui") or LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame with shadow effect (matching LoopKill)
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 220, 0, 160)
Frame.Position = UDim2.new(0.5, -110, 0.5, -80)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

-- Drop shadow effect
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ImageTransparency = 0.8
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(0, -10, 0, -10)
shadow.BackgroundTransparency = 1
shadow.ZIndex = -1
shadow.Parent = Frame

-- Rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = Frame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 24)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
TitleBar.BorderSizePixel = 0
TitleBar.ZIndex = 2
TitleBar.Parent = Frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = TitleBar

-- Title Text
local Title = Instance.new("TextLabel")
Title.Text = "ðŸŒ€ LoopFling | TCMD"
Title.Size = UDim2.new(1, -40, 1, 0)
Title.Position = UDim2.new(0, 8, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(220, 220, 220)
Title.Font = Enum.Font.GothamSemibold
Title.TextSize = 13
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.ZIndex = 2
Title.Parent = TitleBar

-- Close Button (modern style)
local CloseButton = Instance.new("ImageButton")
CloseButton.Size = UDim2.new(0, 18, 0, 18)
CloseButton.Position = UDim2.new(1, -26, 0, 3)
CloseButton.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
CloseButton.Image = "rbxassetid://3926305904"
CloseButton.ImageColor3 = Color3.fromRGB(220, 220, 220)
CloseButton.ImageRectOffset = Vector2.new(284, 4)
CloseButton.ImageRectSize = Vector2.new(24, 24)
CloseButton.ZIndex = 2
CloseButton.Parent = TitleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = CloseButton

-- Main content frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, 0, 1, -24)
ContentFrame.Position = UDim2.new(0, 0, 0, 24)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 1
ContentFrame.Parent = Frame

-- Input Box with better styling
local InputBox = Instance.new("TextBox")
InputBox.Size = UDim2.new(0.8, 0, 0, 24)
InputBox.Position = UDim2.new(0.1, 0, 0.1, 0)
InputBox.PlaceholderText = "Enter player name or 'all'"
InputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
InputBox.TextColor3 = Color3.fromRGB(220, 220, 220)
InputBox.Font = Enum.Font.Gotham
InputBox.TextSize = 11
InputBox.ClearTextOnFocus = false
InputBox.ZIndex = 2
InputBox.Parent = ContentFrame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 6)
inputCorner.Parent = InputBox

local inputPadding = Instance.new("UIPadding")
inputPadding.PaddingLeft = UDim.new(0, 6)
inputPadding.Parent = InputBox

-- View Button
local ViewButton = Instance.new("TextButton")
ViewButton.Size = UDim2.new(0.3, 0, 0, 24)
ViewButton.Position = UDim2.new(0.1, 0, 0.3, 0)
ViewButton.Text = "VIEW"
ViewButton.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
ViewButton.TextColor3 = Color3.fromRGB(220, 220, 220)
ViewButton.Font = Enum.Font.GothamSemibold
ViewButton.TextSize = 11
ViewButton.ZIndex = 2
ViewButton.Parent = ContentFrame

local viewCorner = Instance.new("UICorner")
viewCorner.CornerRadius = UDim.new(0, 6)
viewCorner.Parent = ViewButton

-- Fling Button with hover effects
local FlingButton = Instance.new("TextButton")
FlingButton.Size = UDim2.new(0.6, 0, 0, 24)
FlingButton.Position = UDim2.new(0.2, 0, 0.6, 0)
FlingButton.Text = "START LOOPFLING"
FlingButton.BackgroundColor3 = Color3.fromRGB(215, 60, 0)
FlingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FlingButton.Font = Enum.Font.GothamSemibold
FlingButton.TextSize = 11
FlingButton.ZIndex = 2
FlingButton.Parent = ContentFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 6)
buttonCorner.Parent = FlingButton

-- Status Label with better styling
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0.8, 0, 0, 18)
StatusLabel.Position = UDim2.new(0.1, 0, 0.85, 0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
StatusLabel.Text = "Ready to fling players"
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 10
StatusLabel.ZIndex = 2
StatusLabel.Parent = ContentFrame

-- Button hover effects
local function buttonHoverEffect(button)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = button == FlingButton and Color3.fromRGB(255, 80, 0) or Color3.fromRGB(80, 80, 90)
        }):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = button == FlingButton and Color3.fromRGB(215, 60, 0) or Color3.fromRGB(60, 60, 70)
        }):Play()
    end)
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = button == FlingButton and Color3.fromRGB(180, 40, 0) or Color3.fromRGB(90, 90, 100)
        }):Play()
    end)
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = button == FlingButton and Color3.fromRGB(255, 80, 0) or Color3.fromRGB(80, 80, 90)
        }):Play()
    end)
end

buttonHoverEffect(FlingButton)
buttonHoverEffect(CloseButton)
buttonHoverEffect(ViewButton)

-- Drag functionality (cross-platform)
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Fling functionality
local Targets = {}
local AllBool = false
local TargetPlayers = {}
local FlingConnections = {}
local FlingLoop = false
local OriginalPosition = nil
local isViewing = false
local viewedTarget = nil

local function GetPlayer(Name)
    Name = Name:lower()
    if Name == "all" then
        AllBool = true
        return
    elseif Name == "others" then
        AllBool = false
        for _, x in ipairs(Players:GetPlayers()) do
            if x ~= LocalPlayer then
                table.insert(TargetPlayers, x)
            end
        end
        return
    elseif Name == "random" then
        local GetPlayers = Players:GetPlayers()
        if table.find(GetPlayers, LocalPlayer) then
            table.remove(GetPlayers, table.find(GetPlayers, LocalPlayer))
        end
        return GetPlayers[math.random(#GetPlayers)]
    else
        for _, x in next, Players:GetPlayers() do
            if x ~= LocalPlayer then
                if x.Name:lower():match(Name) or x.DisplayName:lower():match(Name) then
                    return x
                end
            end
        end
    end
end

local function Message(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = _Title,
        Text = _Text,
        Duration = Time
    })
end

local function MakeInvisible()
    local Character = LocalPlayer.Character
    if Character then
        for _, part in pairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.LocalTransparencyModifier = 1
                if part:IsA("MeshPart") or part:IsA("Part") then
                    part.Material = Enum.Material.ForceField
                end
            elseif part:IsA("Decal") then
                part.Transparency = 1
            elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
                part.Handle.LocalTransparencyModifier = 1
            end
        end
    end
end

local function MakeVisible()
    local Character = LocalPlayer.Character
    if Character then
        for _, part in pairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.LocalTransparencyModifier = 0
                if part:IsA("MeshPart") or part:IsA("Part") then
                    part.Material = Enum.Material.Plastic
                end
            elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
                part.Handle.LocalTransparencyModifier = 0
            end
        end
    end
end

local function SkidFling(TargetPlayer)
    local Character = LocalPlayer.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart
    local TCharacter = TargetPlayer.Character
    local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter and TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter and TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")
    
    if Character and Humanoid and RootPart then
        if RootPart.Velocity.Magnitude < 50 then
            getgenv().OldPos = RootPart.CFrame
        end
        
        if THumanoid and THumanoid.Sit and not AllBool then
            return Message("Error Occurred", "Target is sitting", 5)
        end
        
        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif not THead and Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        elseif THumanoid and TRootPart then
            workspace.CurrentCamera.CameraSubject = THumanoid
        end
        
        if not TCharacter:FindFirstChildWhichIsA("BasePart") then
            return
        end
        
        local function FPos(BasePart, Pos, Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
            RootPart.Velocity = Vector3.new(1000000000, 1000000000 * 10, 1000000000)
            RootPart.RotVelocity = Vector3.new(10000000000, 10000000000, 10000000000)
        end
        
        local function SFBasePart(BasePart)
            local TimeToWait = 2
            local Time = tick()
            local Angle = 0
            
            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                        Angle = Angle + 100
                        FPos(BasePart, CFrame.new(0, 1.5, 0) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude) / 1.25), CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude) / 1.25), CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude) / 1.25), CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude) / 1.25), CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                    else
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                    end
                else
                    break
                end
            until (BasePart.Velocity.Magnitude > 500) or (BasePart.Parent ~= TargetPlayer.Character) or (TargetPlayer.Parent ~= Players) or (not TargetPlayer.Character == TCharacter) or THumanoid.Sit or (Humanoid.Health <= 0) or (tick() > (Time + TimeToWait))
        end
        
        workspace.FallenPartsDestroyHeight = math.huge
        local BV = Instance.new("BodyVelocity")
        BV.Name = "EpixVel"
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(20000000000, 20000000000, 20000000000)
        BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        
        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart and not THead then
            SFBasePart(TRootPart)
        elseif not TRootPart and THead then
            SFBasePart(THead)
        elseif not TRootPart and not THead and Accessory and Handle then
            SFBasePart(Handle)
        else
            return Message("Error Occurred", "Target is missing everything", 5)
        end
        
        BV:Destroy()
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        workspace.CurrentCamera.CameraSubject = Humanoid
        
        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, 0.5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, 0.5, 0))
            Humanoid:ChangeState("GettingUp")
            
            for _, x in pairs(Character:GetChildren()) do
                if x:IsA("BasePart") then
                    x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                end
            end
            
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
        
        workspace.FallenPartsDestroyHeight = getgenv().FPDH or 500
        MakeVisible()
    else
        return Message("Error Occurred", "Random error", 5)
    end
end

local function LoopFlingOn()
    if not FlingLoop then
        FlingLoop = true
        TargetPlayers = {}
        
        if LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
            OriginalPosition = LocalPlayer.Character.PrimaryPart.CFrame
        end
        
        if Targets[1] then
            for _, x in next, Targets do
                local targetPlayer = GetPlayer(x)
                if targetPlayer then
                    table.insert(TargetPlayers, targetPlayer)
                end
            end
        end
        
        for _, targetPlayer in next, TargetPlayers do
            local connection = targetPlayer.CharacterAdded:Connect(function()
                if FlingLoop then
                    SkidFling(targetPlayer)
                end
            end)
            table.insert(FlingConnections, connection)
        end
        
        MakeInvisible()
        
        local flingLoopConnection
        flingLoopConnection = RunService.Heartbeat:Connect(function()
            if FlingLoop then
                if AllBool then
                    for _, x in next, Players:GetPlayers() do
                        if x ~= LocalPlayer then
                            SkidFling(x)
                        end
                    end
                else
                    for _, x in next, TargetPlayers do
                        if x and x ~= LocalPlayer then
                            SkidFling(x)
                        end
                    end
                end
            else
                flingLoopConnection:Disconnect()
            end
            task.wait(0.07)
        end)
    end
end

local function LoopFlingOff()
    FlingLoop = false
    TargetPlayers = {}
    
    for _, connection in ipairs(FlingConnections) do
        connection:Disconnect()
    end
    
    FlingConnections = {}
    MakeVisible()
    
    if LocalPlayer.Character and LocalPlayer.Character.PrimaryPart and OriginalPosition then
        local newPosition = OriginalPosition * CFrame.new(0, 100, 0)
        LocalPlayer.Character:SetPrimaryPartCFrame(newPosition)
    end
end

-- Sound effect for input
local Sound = Instance.new("Sound")
Sound.SoundId = "rbxassetid://9120299810"
Sound.Volume = 1
Sound.Parent = SoundService

InputBox:GetPropertyChangedSignal("Text"):Connect(function()
    Sound:Play()
end)

-- Toggle fling button
FlingButton.MouseButton1Click:Connect(function()
    if not FlingLoop then
        Targets = {InputBox.Text}
        if InputBox.Text == "" then
            StatusLabel.Text = "Please enter a player name!"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
            task.delay(2, function()
                if StatusLabel.Text == "Please enter a player name!" then
                    StatusLabel.Text = "Ready to fling players"
                    StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                end
            end)
            return
        end
        
        FlingButton.Text = "STOP LOOPFLING"
        StatusLabel.Text = "Starting loop fling..."
        LoopFlingOn()
    else
        FlingButton.Text = "START LOOPFLING"
        StatusLabel.Text = "Stopped loop fling"
        task.delay(2, function()
            if StatusLabel.Text == "Stopped loop fling" then
                StatusLabel.Text = "Ready to fling players"
                StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
            end
        end)
        LoopFlingOff()
    end
end)

-- View button functionality
ViewButton.MouseButton1Click:Connect(function()
    if not isViewing then
        local targetPlayer = GetPlayer(InputBox.Text)
        if targetPlayer and targetPlayer.Character then
            local targetHead = targetPlayer.Character:FindFirstChild("Head")
            local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
            
            if targetHead then
                workspace.CurrentCamera.CameraSubject = targetHead
                isViewing = true
                viewedTarget = targetPlayer
                ViewButton.Text = "UNVIEW"
                StatusLabel.Text = "Viewing "..targetPlayer.Name
            elseif targetHumanoid then
                workspace.CurrentCamera.CameraSubject = targetHumanoid
                isViewing = true
                viewedTarget = targetPlayer
                ViewButton.Text = "UNVIEW"
                StatusLabel.Text = "Viewing "..targetPlayer.Name
            else
                Message("Error Occurred", "Target player has no head or humanoid", 5)
                StatusLabel.Text = "View failed"
                StatusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
                task.delay(2, function()
                    if StatusLabel.Text == "View failed" then
                        StatusLabel.Text = "Ready to fling players"
                        StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                    end
                end)
            end
        else
            Message("Error Occurred", "Target player not found", 5)
            StatusLabel.Text = "View failed"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
            task.delay(2, function()
                if StatusLabel.Text == "View failed" then
                    StatusLabel.Text = "Ready to fling players"
                    StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                end
            end)
        end
    else
        if LocalPlayer.Character then
            local localHumanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if localHumanoid then
                workspace.CurrentCamera.CameraSubject = localHumanoid
                isViewing = false
                viewedTarget = nil
                ViewButton.Text = "VIEW"
                StatusLabel.Text = "Stopped viewing"
                task.delay(2, function()
                    if StatusLabel.Text == "Stopped viewing" then
                        StatusLabel.Text = "Ready to fling players"
                        StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                    end
                end)
            else
                Message("Error Occurred", "Local player has no humanoid", 5)
            end
        end
    end
end)

-- Clean up when players leave
Players.PlayerRemoving:Connect(function(leavingPlayer)
    if viewedTarget == leavingPlayer then
        if LocalPlayer.Character then
            local localHumanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if localHumanoid then
                workspace.CurrentCamera.CameraSubject = localHumanoid
            end
        end
        isViewing = false
        viewedTarget = nil
        ViewButton.Text = "VIEW"
    end
end)

-- Clean up when local player respawns
LocalPlayer.CharacterAdded:Connect(function()
    if isViewing then
        if LocalPlayer.Character then
            local localHumanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if localHumanoid then
                workspace.CurrentCamera.CameraSubject = localHumanoid
            end
        end
        isViewing = false
        viewedTarget = nil
        ViewButton.Text = "VIEW"
    end
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    LoopFlingOff()
    ScreenGui:Destroy()
end)

-- Disable collision for better flinging
local function DisableCollision()
    local Character = LocalPlayer.Character
    if Character then
        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        if HumanoidRootPart then
            HumanoidRootPart.CanCollide = false
        end
    end
end

-- Add selection box for visual feedback
local function AddSelectionBox()
    local Character = LocalPlayer.Character
    if Character then
        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        if HumanoidRootPart then
            local SelectionBox = Instance.new("SelectionBox")
            SelectionBox.Adornee = HumanoidRootPart
            SelectionBox.Parent = HumanoidRootPart
            SelectionBox.Color3 = Color3.new(1, 0, 0)
            SelectionBox.LineThickness = 0.05
        end
    end
end

-- Initialize
DisableCollision()
AddSelectionBox()

if LocalPlayer.Character then
    DisableCollision()
    AddSelectionBox()
end

LocalPlayer.CharacterAdded:Connect(function()
    DisableCollision()
    AddSelectionBox()
end)
